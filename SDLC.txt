SDLC is a systematic process for building software that ensure the quality and cerrectness of the software built.
SDLC process aims to produce high-quality software that meets customer expectations.
The system development should be complete in the pre-defined time frame and cost. SDLC consists of a detailed plan which explains how to plan,
build and maintain specific software. Every phase of the SDLC life Cycle has its own process and deliverable that feed into the next phase. 
SDLC stands Software Development Life Cycle and is also referred to as the Application Development life-cycle.

-----------------------WHY IS SDLC-------------------------------
>it offers a basis for project planning, scheduling and estimating;
>Provides a framework for a standard ste of activities and deliverables;
>It is a mechanism for project tracking and control;
>Increases visibility of project plannig to all involved stakeholders of the development process;
>Incresed and enhance development speed;
>Improved client relations;
>Helps you to decrease project risk and project management plan overhead.

----------------------SDLC Phases----------------------------------
the entire SDLC process divided into the folowing stages:
>Phase 1 : Requirements collection and analisys;
>Phase 2 : Feasibility study;
>Phase 3 : Design;
>Phase 4 : Coding;
>Phase 5 : Testing;
>Phase 6 : Installation/Deployment;
>Phase 7 : Maintenance;

Phase 1 : Requirement collection and analysis;
The requirement is the first stage in the SDLC process. It is conducted by the senior team members with inputs from all the stakeholders and
domain experts in the industry. Planning for the quality assurance requirements and recognization of the risks involved is aslo done at this stage.
This stage gives a clearer picture of the scope of the entire project and the anticipated issues, opportunities, and directives which triggered the project.
Requirements Gathering stage need teams to get detailed and precise requirements. This helps compnies to finilize the necessary timeline to
finish the work ooh the system.

Phase 2 : Feasibility study;

Once the requirements analysis phase is completed the next sdlc step and document software needs. This process conducted with the help of 'Software 
Requirement Specification' document also know as 'SRS' document. It includes everything which be designed and develop during the project life cycle.
There are mainly five types of feasibility checks:
-Economic: Can we complete the project within the budget or not?
-Legal: Can we handle this project as cyber law and other regulatory framework/compliances.
-Operation feasibility: Can we create operations which is expected by the client?
-Technical: Need to check whether the current computer system can support the software.
-Schedule: Decide that the project can be completed within the given schedule or not.

Phase 3 : Design
In this third pahse, the system and software design documents are prepare as per the requirement specification document.
This helps define overall system atchitecture.
This design phase serves as input for the next phase of the model.
There are two kinds of desing documents developed in this phase:
-High-level design (HLD)
-> Brief description and name of each module;
-> An outline about the functionality of ever module;
-> Interface relationshio and dependencies between moduls;
-> Database tables identified along with their key elements
-> Complete architecturee diagrams along with technology details
-Low-Level Design (LLD)
-> Functional logic of the modules
-> Database tables, which include type and size
-> Complete detail of the interface
-> Address all types of dependency issues
-> Complete input and outputs for every module

Phase 4 : Coding
Once of the system desing phase is over, the next phase is coding. In thehis phase, developers start build the entire system by writing code using
the chosen programming language. In the coding phase, tasks are devided into units or modules and assigned to the various developers.
It is the longest phase of hte SDLC process.
In this phase, Deveper needs to follow certain prededined coding guidlines. They also need to use programming tools likecompiler, interpreter, debugger
and implement the code.

Phase 5 : Testing
Once the software is complete and it is deployed in the testing evironment. The testing team stars testing the functionality of the entire system.
This is done to verify that the entire application works according to the customer requirement.
During this phase, QA and testing team may find some bugs/defets which they communicate to developers. The development team fixes the bug and send back
to QA for a re-test. This process continue until the software is bug-free, stable, and working according to the business needs of that system.

Phase 6 : Installation/Deployment
Once the software testing phase is over and no bugs or erroes lest in the system then the final deploymnet process starts. Based on the feedback 
given by the project manager, the final software is released and checked for deployment issues if any.

Phase 7 : Maintenance
Once the system is deployed and customers start using the developed system, following 3 activities occur
>Bug fixing - bugs are reported because of somr scenarios which are nit tested at 
>Upgrade - upgrading the application to th newer versions of the software
>Enhancement - aadding some new features inti the existing software.

---------------Popular SDLC models------------------
> Waterfall model
The waterfall is a widely accepted SDLC model. In this approach, the whole process of the software development is divided into various phases of SDLC.
In this SDLC model, the outcome of one phase acts as the input for the next phase.
This SDLC model is documentation-intensive, with earlier phases documenting what need be performed in the subsequent phases.

>Incremental Model
The incremental model is not a separate model. It is essentially a series of watefall cucles. The requirements are divided into groups at the start
of the project.For each group, the SDLC model is followed to develop software. The SDLC process is repeated, with each release adding more functionality
until all requirements are met. In this method, every cycle act as the maintenance phase for the previous software realese. Modification to the incremental
model allows development cycles to overlap. After that subsequent cycle may begin before the previous cycle is complete.

>V-Model 
in this type of SDLC model testing and the development, the phase is planned in parallel. So, there are verification phases of sdlc on the side and 
the validation phase on the other side. V-Modeljoins by Coding phase.

>Agile Model
Agile methodology is a practice which promotes continue interaction of development and testing during the SDLC process of any project. In the Agile method,
the entire project is divided into small incremental builds. All of these builds are provided in oterations, and each iteration lasts from on three weeks.

>Spiral Model
the spiral model is a risk-drive process model. This SDLC model helps the team to adopt elements of one or more process models like a waterfall,
incremental,ect.
This model adopts the best features of the prototyping model and the waterfall model. The spiral methodology is a combination of rapid prototyping and 
concurrency in design and development activities.




